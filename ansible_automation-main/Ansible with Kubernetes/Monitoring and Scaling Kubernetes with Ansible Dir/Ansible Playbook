---
- name: Kubernetes Monitoring and Scaling
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Create monitoring namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring

    - name: Add Prometheus Community repository
      command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      ignore_errors: yes
      changed_when: false

    - name: Add Grafana repository
      command: helm repo add grafana https://grafana.github.io/helm-charts
      ignore_errors: yes
      changed_when: false

    - name: Update Helm repositories
      command: helm repo update
      ignore_errors: yes
      changed_when: false

    - name: Install Prometheus using Helm
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        release_name: prometheus
        namespace: monitoring
        state: present

    - name: Install Grafana using Helm
      kubernetes.core.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_name: grafana
        namespace: monitoring
        state: present
        values:
          adminPassword: "yourpassword"
          service:
            type: LoadBalancer

    - name: Deploy a sample application
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: sample-app
            namespace: default
          spec:
            replicas: 10
            selector:
              matchLabels:
                app: sample-app
            template:
              metadata:
                labels:
                  app: sample-app
              spec:
                containers:
                  - name: sample-app
                    image: nginx:latest
                    ports:
                      - containerPort: 80

    - name: Define Prometheus scrape_configs
      command: kubectl apply -f prometheus.yaml

    - name: Find All Running Services in Monitoring Namespace
      command: kubectl get service -n monitoring
      register: kubectl_output
      changed_when: false

    - name: Display kubectl output
      debug:
        var: kubectl_output.stdout