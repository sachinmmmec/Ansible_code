---
- name: Configure kubectl for DigitalOcean Kubernetes Cluster
  hosts: webservers
  become: yes

  tasks:
    - name: Ensure /tmp directory exists with correct permissions
      ansible.builtin.file:
        path: /tmp
        state: directory
        mode: '1777'  # Ensure correct permissions on /tmp
      ignore_errors: yes  # Ignore errors if /tmp already exists
      
    - name: Install apt-transport-https, ca-certificates, curl, and gnupg
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
      register: install_packages_result

    - name: Verify packages installation
      ansible.builtin.debug:
        msg: "Package {{ item.item }} {{ 'installed' if item.changed else 'already installed' }}"
      loop: "{{ install_packages_result.results }}"
      when: item.changed

    - name: Create /etc/apt/keyrings directory if it doesn't exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes APT key and install to /etc/apt/keyrings
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: download_key_result

    - name: Verify Kubernetes APT key download and installation
      ansible.builtin.debug:
        msg: "Kubernetes APT key {{ 'downloaded and installed' if download_key_result.rc == 0 else 'not downloaded or installed' }}"
      when: download_key_result.rc == 0

    - name: Add Kubernetes apt repository configuration
      ansible.builtin.copy:
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
        dest: /etc/apt/sources.list.d/kubernetes.list
        owner: root
        group: root
        mode: '0644'

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install kubectl
      ansible.builtin.package:
        name: kubectl
        state: present

    - name: Verify kubectl installation
      ansible.builtin.command: kubectl version --client
      register: kubectl_version_output

    - name: Display kubectl version
      ansible.builtin.debug:
        msg: "kubectl version is {{ kubectl_version_output.stdout }}"

    # Optionally, you can add tasks to set up kubeconfig or other configurations