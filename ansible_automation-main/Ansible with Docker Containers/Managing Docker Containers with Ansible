---
- name: Manage Docker Containers
  hosts: webservers
  become: yes

  tasks:

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Pull Nginx image
      community.docker.docker_image:
        name: nginx
        source: pull

    - name: Pull Redis image
      community.docker.docker_image:
        name: redis
        source: pull

    - name: Create and start Nginx container
      community.docker.docker_container:
        name: nginx_container
        image: nginx
        state: started
        ports:
          - "80:80"

    - name: Create and start Redis container
      community.docker.docker_container:
        name: redis_container
        image: redis
        state: started
        ports:
          - "6379:6379"

    - name: Ensure Nginx container is running
      community.docker.docker_container_info:
        name: nginx_container
      register: nginx_info

    - name: Debug Nginx container status
      debug:
        msg: "Nginx container status: {{ nginx_info.container.State.Status }}"

    - name: Ensure Redis container is running
      community.docker.docker_container_info:
        name: redis_container
      register: redis_info

    - name: Debug Redis container status
      debug:
        msg: "Redis container status: {{ redis_info.container.State.Status }}"

    - name: Show all running containers before termination
      command: docker ps --format "{{'{{'}}.Names{{'}}'}}"
      register: all_containers_before

    - name: Debug all running containers before termination
      debug:
        msg: "All running containers before termination: {{ all_containers_before.stdout_lines }}"

    - name: Terminate Nginx container
      community.docker.docker_container:
        name: nginx_container
        state: absent

    - name: Terminate Redis container
      community.docker.docker_container:
        name: redis_container
        state: absent

    - name: Show all running containers after termination
      command: docker ps --format "{{'{{'}}.Names{{'}}'}}"
      register: all_containers_after

    - name: Debug all running containers after termination
      debug:
        msg: "All running containers after termination: {{ all_containers_after.stdout_lines }}"