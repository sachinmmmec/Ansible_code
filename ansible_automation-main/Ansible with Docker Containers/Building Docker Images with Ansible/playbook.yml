---
- name: Build Docker image for Python web app and manage container
  hosts: webservers
  become: yes
  
  tasks:

    - name: Copy application files to target machine
      copy:
        src: ./myapp/
        dest: /tmp/myapp/

    - name: Build Docker image
      docker_image:
        name: my_python_app
        build:
          path: /tmp/myapp/
        tag: latest
        # Add source parameter with path to your application directory
        source: build

    - name: Remove application files from target machine (optional)
      file:
        path: /tmp/myapp/
        state: absent

    - name: Create Docker container from the built image
      docker_container:
        name: my_python_container
        image: my_python_app:latest
        state: started
        command: sleep infinity
        ports:
          - "8080:80"  # Example port mapping

    - name: Ensure my_python_container container is running
      community.docker.docker_container_info:
        name: my_python_container
      register: my_python_container_info

    - name: Debug my_python_container container status
      debug:
        msg: "my_python_container container status: {{ my_python_container_info.container.State.Status }}"

    - name: Stop the container
      docker_container:
        name: my_python_container
        state: stopped

    - name: Remove the container (optional)
      docker_container:
        name: my_python_container
        state: absent

    - name: Show all running containers after termination
      command: docker ps --format "{{'{{'}}.Names{{'}}'}}"
      register: all_containers_after

    - name: Debug all running containers after termination
      debug:
        msg: "All running containers after termination: {{ all_containers_after.stdout_lines }}"